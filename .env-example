# Configure your test environment
# ===========================

# Ansible Host Configuration
# This is either `inventory/localhost` or `inventory/awshost`
# Set to `inventory/localhost` to point ansible at your local machine
# Set to `inventory/awshost` to point ansible at a deployed AWS host
# Be sure to configure the appropriate inventory file from the output of terraform
ANSIBLE_INVENTORY=inventory/localhost

# AWS Volume Configuration. Set these to values appropriate for EBS volumes on EC2
# NOTE: These must not change between deploying and running the tests, you shouldn't need to change them
# See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html for docs on appropriate device names
TEST_SET_DEVICE=/dev/sdf
PACKED_DEVICE=/dev/sdg
UNPACKED_DEVICE=/dev/sdh

# Root Directory Configuration on Target System
# Be sure the user configuring and running the test has appropriate access to this directory
# `~` should be sufficient for local testing on environment where you have sudo access
ROOT_PATH=~

# Install Path: Where clone and build code that will be installed and run on the target system
INSTALL_PATH=$ROOT_DIR/install

# Data Paths on Target System
# You don't need to change these, unless you want. Changing $ROOT_DIR should be sufficient if permissions are an issue
# Test Path: Where to store test sets on the target system
TEST_SET_PATH=$ROOT_PATH/test_set
# Packed Path: Where to store packed files on target system
PACKED_PATH=$ROOT_PATH/packed
# Unpacked Path: Where to store unpacked files on target system
UNPACKED_PATH=$ROOT_PATH/unpacked
# Manifest Path: Where to store manifest files on target system
MANIFEST_PATH=$ROOT_PATH/manifest
# Results Path: Where to store results files on target system
RESULT_PATH=$ROOT_PATH/result

# Test Set Configuration on Target System
# Test Set Size: How many GB of data to use for test set
TEST_SET_SIZE=1
# Test Set File Size: How many test sets to create
TEST_SET_FILE_SIZE=1




