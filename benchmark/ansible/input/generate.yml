# Generate input for the benchmark using the fake-file tool
# -e input_path=/home/dataprep/input
# -e file_structures=Simple,Deep,...
# -e file_structures_size=1024
# -e file_structures_max_width=2
# -e file_structures_max_depth=2
# -e ifttt_test_webhook_key=...

- hosts: all
  name: Generate input for the benchmark using the fake-file tool
  tasks:
    # Create the input directory if it doesn't exist
    - name: Create the input directory if it doesn't exist
      file:
        path: "{{ input_path }}"
        state: directory
    - name: Log the generation parameters to the controller
      debug:
        msg: "Generating Input with parameters at {{ input_path }}:
              input_path: {{ input_path }}
              file_structures: {{ file_structures }}
              file_structures_size: {{ file_structures_size }}
              file_structures_max_width: {{ file_structures_max_width }}
              file_structures_max_depth: {{ file_structures_max_depth }}"

    # Generate our input
    - name: Generate our input
      shell: "
        fake-file \
         -s {{ file_structures_size }} \
         -w {{ file_structures_max_width }} \
         -d {{ file_structures_max_depth }} \
         --strategy {{ item }} \
         -o {{ input_path }}
         -v
       "
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin"
      register: fake_file_call
      with_items: "{{ file_structures.split(',') }}"
    - name: Log the fake-file call to the controller
      debug:
        msg: "{{ fake_file_call.results[0].stdout_lines }}"

    # Get the current time on the host
    - name: Get the current time on the host
      shell: date +%s
      register: start_time
    # Send a notification to IFTTT that we're done
    - include_tasks: ../utils/ifttt.yml
      vars:
        ifttt_job: "benchmark-notification"
        ifttt_body: "{
          \"Title\": \"Input Generated\",
          \"Time\": \"{{ start_time.stdout }}\",
          \"FileStructures\": \"{{ file_structures }}\",
          \"FileStructuresSize\": \"{{ file_structures_size }}\",
          \"FileStructuresMaxWidth\": \"{{ file_structures_max_width }}\",
          \"FileStructuresMaxDepth\": \"{{ file_structures_max_depth }}\",
        }"
        # Note: These need to be named differently than the variables in the playbook
        ifttt_webhook_key: "{{ ifttt_test_webhook_key }}"
      when: ifttt_test_webhook_key is defined and ifttt_test_webhook_key != ""